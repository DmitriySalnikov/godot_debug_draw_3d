[gd_scene load_steps=3 format=3 uid="uid://cnv87ogp7t43e"]

[sub_resource type="GDScript" id="GDScript_wbn2v"]
script/source = "extends Node3D


func _ready():
	if FileAccess.file_exists(\"SUCCESS\"):
		DirAccess.remove_absolute(\"SUCCESS\")
	
	print(\"DD3D Version: \", ProjectSettings.get_setting(\"debug_draw_3d/settings/updates/addon_version\"))
	print(\"Engine Version: \", Engine.get_version_info())
	print(\"Distribution: \", OS.get_distribution_name())
	print(\"OS Name: \", OS.get_name())
	print(\"OS Version: \", OS.get_version())
	print(\"CPU: \", OS.get_processor_name())
	print(\"CPU Count: \", OS.get_processor_count())
	print(\"CPU Architecture: \", Engine.get_architecture_name())
	
	var res = await $Runner.call(&\"start\") if $Runner.has_method(&\"start\") else false
	print(\"Headless runner returns: \", res)
	
	if res:
		var f = FileAccess.open(\"SUCCESS\", FileAccess.WRITE)
		f.store_8(1)
	
	print()
	get_tree().quit(0 if res == true else 1)
"

[sub_resource type="GDScript" id="GDScript_7yy7l"]
script/source = "extends Node3D


# Some API calls to test library integration
func start() -> bool:
	## wait for call_deferred in DebugDraw init code
	await get_tree().process_frame
	await get_tree().process_frame
	
	DebugDrawManager.debug_enabled = true
	print()
	print(\"Start of testing.\")
	
	if true:
		var _s = DebugDraw3D.new_scoped_config().set_thickness(0.1)
		DebugDraw3D.draw_box(Vector3.ZERO, Quaternion.IDENTITY, Vector3.ONE, DebugDraw3D.empty_color, true, 1.2)
	DebugDraw3D.draw_sphere(Vector3.ZERO, 0.5, DebugDraw3D.empty_color, 1.5)
	DebugDraw3D.draw_gizmo(Transform3D().scaled_local(Vector3.ONE*0.4), Color.BROWN, true, 2.5)
	DebugDraw2D.set_text(\"FPS\", \"0\")
	DebugDraw2D.begin_text_group(\"Info\")
	DebugDraw2D.set_text(\"INFO\", \"hello\", 1, DebugDraw2D.empty_color, 1)
	DebugDraw2D.end_text_group()
	
	await get_tree().process_frame
	
	DebugDraw3D.draw_sphere(Vector3.ZERO)
	DebugDraw3D.config.frustum_length_scale = 0.07
	print(\"frustum_length_scale: \", DebugDraw3D.config.frustum_length_scale)
	
	await get_tree().create_timer(2).timeout
	
	DebugDrawManager.clear_all()
	
	print(\"End of testing.\")
	
	return true
"

[node name="HeadlessTest" type="Node3D"]
script = SubResource("GDScript_wbn2v")

[node name="Runner" type="Node3D" parent="."]
script = SubResource("GDScript_7yy7l")

[node name="Node3D" type="Node3D" parent="."]
transform = Transform3D(0.866025, -0.12941, 0.482963, -3.8567e-09, 0.965926, 0.258819, -0.5, -0.224144, 0.836516, 0, 0, 0)

[node name="Camera3D" type="Camera3D" parent="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.5)
current = true
