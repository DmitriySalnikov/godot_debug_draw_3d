diff --git a/SConstruct b/SConstruct
index 27ee137..445fda0 100644
--- a/SConstruct
+++ b/SConstruct
@@ -123,6 +123,8 @@ opts.Add(BoolVariable("generate_template_get_node", "Generate a template version
 
 opts.Add(BoolVariable("build_library", "Build the godot-cpp library.", True))
 opts.Add(EnumVariable("precision", "Set the floating-point precision level", "single", ("single", "double")))
+opts.Add(BoolVariable("exclude_unused_classes", "Disable generation of unused classes.", True))
+opts.Add(PathVariable("folder_to_include_classes", "Path to the directory containing extension sources", "../src", PathVariable.PathIsDir))
 
 # Add platform options
 tools = {}
diff --git a/binding_generator.py b/binding_generator.py
index 9919b73..5baa83f 100644
--- a/binding_generator.py
+++ b/binding_generator.py
@@ -1,5 +1,9 @@
 #!/usr/bin/env python
 
+import sys
+sys.path.insert(0, "../patches")
+import get_used_classes
+
 import json
 import re
 import shutil
@@ -77,6 +81,7 @@ def get_file_list(api_filepath, output_dir, headers=False, sources=False):
     with open(api_filepath) as api_file:
         api = json.load(api_file)
 
+    get_used_classes.scan_dependencies(api)
     core_gen_folder = Path(output_dir) / "gen" / "include" / "godot_cpp" / "core"
     include_gen_folder = Path(output_dir) / "gen" / "include" / "godot_cpp"
     source_gen_folder = Path(output_dir) / "gen" / "src"
@@ -130,6 +135,7 @@ def get_file_list(api_filepath, output_dir, headers=False, sources=False):
         utility_functions_source_path = source_gen_folder / "variant" / "utility_functions.cpp"
         files.append(str(utility_functions_source_path.as_posix()))
 
+    files = get_used_classes.delete_useless(files)
     return files
 
 
@@ -140,6 +146,8 @@ def print_file_list(api_filepath, output_dir, headers=False, sources=False):
 
 
 def scons_emit_files(target, source, env):
+    get_used_classes.setup(env.get("exclude_unused_classes", True), env.get("folder_to_include_classes", "../src"))
+
     files = [env.File(f) for f in get_file_list(str(source[0]), target[0].abspath, True, True)]
     env.Clean(target, files)
     env["godot_cpp_gen_dir"] = target[0].abspath
